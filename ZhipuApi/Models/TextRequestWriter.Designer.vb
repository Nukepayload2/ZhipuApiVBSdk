' <auto-generated/>
' This source file is part of the JSON serialization code and is not intended to be modified by you.
' Re-run the source generator will overwrite your changes in this file.
' Generated by: Nukepayload2.IO.Json.Serialization.NewtonsoftJson
Option Strict On
Option Infer On
Option Explicit On
Option Compare Binary
Imports Nukepayload2.AI.Providers.Zhipu.Models
Imports Newtonsoft.Json.Linq

Namespace Serialization
    Partial Class TextRequestWriter

        ''' <summary>
        ''' Writes <see cref="TextRequestBase"/> to JsonWriter.
        ''' </summary>
        Public Shared Sub WriteTextRequestBase(writer As Global.Newtonsoft.Json.JsonWriter, value As TextRequestBase)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.RequestId IsNot Nothing Then
                writer.WritePropertyName("request_id")
                writer.WriteValue(value.RequestId)
            End If
            If value.Model IsNot Nothing Then
                writer.WritePropertyName("model")
                writer.WriteValue(value.Model)
            End If
            If value.Messages IsNot Nothing Then
                writer.WritePropertyName("messages")
                WriteIReadOnlyListOfMessageItem(writer, value.Messages)
            End If
            If value.Tools IsNot Nothing Then
                writer.WritePropertyName("tools")
                WriteIReadOnlyListOfFunctionTool(writer, value.Tools)
            End If
            If value.ToolChoice IsNot Nothing Then
                writer.WritePropertyName("tool_choice")
                writer.WriteValue(value.ToolChoice)
            End If
            If value.TopP IsNot Nothing Then
                writer.WritePropertyName("top_p")
                writer.WriteValue(value.TopP)
            End If
            If value.Temperature IsNot Nothing Then
                writer.WritePropertyName("temperature")
                writer.WriteValue(value.Temperature)
            End If
            If value.Stream IsNot Nothing Then
                writer.WritePropertyName("stream")
                writer.WriteValue(value.Stream)
            End If
            If value.DoSample IsNot Nothing Then
                writer.WritePropertyName("do_sample")
                writer.WriteValue(value.DoSample)
            End If
            If value.MaxResponseTokens IsNot Nothing Then
                writer.WritePropertyName("max_tokens")
                writer.WriteValue(value.MaxResponseTokens)
            End If
            If value.UserId IsNot Nothing Then
                writer.WritePropertyName("user_id")
                writer.WriteValue(value.UserId)
            End If
            If value.ResponseFormat IsNot Nothing Then
                writer.WritePropertyName("response_format")
                WriteResponseFormat(writer, value.ResponseFormat)
            End If
            If value.StopWords IsNot Nothing Then
                writer.WritePropertyName("stop")
                WriteIReadOnlyListOfString(writer, value.StopWords)
            End If

            writer.WriteEndObject()
        End Sub ' WriteTextRequestBase

        ''' <summary>
        ''' Writes <see cref="MessageItem"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteMessageItem(writer As Global.Newtonsoft.Json.JsonWriter, value As MessageItem)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Role IsNot Nothing Then
                writer.WritePropertyName("role")
                writer.WriteValue(value.Role)
            End If
            If value.Content IsNot Nothing Then
                writer.WritePropertyName("content")
                WriteStringOrArrayOfContentType(writer, value.Content)
            End If
            If value.ToolCallId IsNot Nothing Then
                writer.WritePropertyName("tool_call_id")
                writer.WriteValue(value.ToolCallId)
            End If

            writer.WriteEndObject()
        End Sub ' WriteMessageItem

        ''' <summary>
        ''' Writes <see cref="ContentType"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteContentType(writer As Global.Newtonsoft.Json.JsonWriter, value As ContentType)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Type IsNot Nothing Then
                writer.WritePropertyName("type")
                writer.WriteValue(value.Type)
            End If
            If value.Text IsNot Nothing Then
                writer.WritePropertyName("text")
                writer.WriteValue(value.Text)
            End If
            If value.ImageUrl IsNot Nothing Then
                writer.WritePropertyName("image_url")
                WriteImageUrlType(writer, value.ImageUrl)
            End If
            If value.VideoUrl IsNot Nothing Then
                writer.WritePropertyName("video_url")
                WriteVideoUrlType(writer, value.VideoUrl)
            End If

            writer.WriteEndObject()
        End Sub ' WriteContentType

        ''' <summary>
        ''' Writes <see cref="ImageUrlType"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteImageUrlType(writer As Global.Newtonsoft.Json.JsonWriter, value As ImageUrlType)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Url IsNot Nothing Then
                writer.WritePropertyName("url")
                writer.WriteValue(value.Url)
            End If

            writer.WriteEndObject()
        End Sub ' WriteImageUrlType

        ''' <summary>
        ''' Writes <see cref="VideoUrlType"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteVideoUrlType(writer As Global.Newtonsoft.Json.JsonWriter, value As VideoUrlType)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Url IsNot Nothing Then
                writer.WritePropertyName("url")
                writer.WriteValue(value.Url)
            End If

            writer.WriteEndObject()
        End Sub ' WriteVideoUrlType

        ''' <summary>
        ''' Writes <see cref="FunctionTool"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteFunctionTool(writer As Global.Newtonsoft.Json.JsonWriter, value As FunctionTool)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Type IsNot Nothing Then
                writer.WritePropertyName("type")
                writer.WriteValue(value.Type)
            End If
            If value.Function IsNot Nothing Then
                writer.WritePropertyName("function")
                WriteFunctionMetadata(writer, value.Function)
            End If
            If value.Retrieval IsNot Nothing Then
                writer.WritePropertyName("retrieval")
                WriteRetrievalMetadata(writer, value.Retrieval)
            End If
            If value.WebSearch IsNot Nothing Then
                writer.WritePropertyName("web_search")
                WriteWebSearchMetadata(writer, value.WebSearch)
            End If

            writer.WriteEndObject()
        End Sub ' WriteFunctionTool

        ''' <summary>
        ''' Writes <see cref="FunctionMetadata"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteFunctionMetadata(writer As Global.Newtonsoft.Json.JsonWriter, value As FunctionMetadata)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Name IsNot Nothing Then
                writer.WritePropertyName("name")
                writer.WriteValue(value.Name)
            End If
            If value.Description IsNot Nothing Then
                writer.WritePropertyName("description")
                writer.WriteValue(value.Description)
            End If
            If value.Parameters IsNot Nothing Then
                writer.WritePropertyName("parameters")
                WriteFunctionParameters(writer, value.Parameters)
            End If

            writer.WriteEndObject()
        End Sub ' WriteFunctionMetadata

        ''' <summary>
        ''' Writes <see cref="FunctionParameters"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteFunctionParameters(writer As Global.Newtonsoft.Json.JsonWriter, value As FunctionParameters)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Type IsNot Nothing Then
                writer.WritePropertyName("type")
                writer.WriteValue(value.Type)
            End If
            If value.Properties IsNot Nothing Then
                writer.WritePropertyName("properties")
                writer.WriteStartObject()
                For Each prop In value.Properties
                    writer.WritePropertyName(prop.Key)
                WriteFunctionParameterDescriptor(writer, prop.Value)
                Next
                writer.WriteEndObject()
            End If
            If value.Required IsNot Nothing Then
                writer.WritePropertyName("required")
                WriteIReadOnlyListOfString(writer, value.Required)
            End If

            writer.WriteEndObject()
        End Sub ' WriteFunctionParameters

        ''' <summary>
        ''' Writes <see cref="RetrievalMetadata"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteRetrievalMetadata(writer As Global.Newtonsoft.Json.JsonWriter, value As RetrievalMetadata)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.KnowledgeId IsNot Nothing Then
                writer.WritePropertyName("knowledge_id")
                writer.WriteValue(value.KnowledgeId)
            End If
            If value.PromptTemplate IsNot Nothing Then
                writer.WritePropertyName("prompt_template")
                writer.WriteValue(value.PromptTemplate)
            End If

            writer.WriteEndObject()
        End Sub ' WriteRetrievalMetadata

        ''' <summary>
        ''' Writes <see cref="WebSearchMetadata"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteWebSearchMetadata(writer As Global.Newtonsoft.Json.JsonWriter, value As WebSearchMetadata)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.IsEnabled IsNot Nothing Then
                writer.WritePropertyName("enable")
                writer.WriteValue(value.IsEnabled)
            End If
            If value.SearchQuery IsNot Nothing Then
                writer.WritePropertyName("search_query")
                writer.WriteValue(value.SearchQuery)
            End If
            If value.SearchPrompt IsNot Nothing Then
                writer.WritePropertyName("search_prompt")
                writer.WriteValue(value.SearchPrompt)
            End If
            If value.SearchResult IsNot Nothing Then
                writer.WritePropertyName("search_result")
                writer.WriteValue(value.SearchResult)
            End If

            writer.WriteEndObject()
        End Sub ' WriteWebSearchMetadata

        ''' <summary>
        ''' Writes <see cref="FunctionParameterDescriptor"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteFunctionParameterDescriptor(writer As Global.Newtonsoft.Json.JsonWriter, value As FunctionParameterDescriptor)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Type IsNot Nothing Then
                writer.WritePropertyName("type")
                writer.WriteValue(value.Type)
            End If
            If value.Description IsNot Nothing Then
                writer.WritePropertyName("description")
                writer.WriteValue(value.Description)
            End If
            If value.DefaultJson IsNot Nothing Then
                writer.WritePropertyName("default")
                Global.Newtonsoft.Json.JsonSerializer.CreateDefault().Serialize(writer, value.DefaultJson)
            End If
            If value.EnumJson IsNot Nothing Then
                writer.WritePropertyName("enum")
                WriteIReadOnlyListOfJValue(writer, value.EnumJson)
            End If

            writer.WriteEndObject()
        End Sub ' WriteFunctionParameterDescriptor

        ''' <summary>
        ''' Writes <see cref="ResponseFormat"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteResponseFormat(writer As Global.Newtonsoft.Json.JsonWriter, value As ResponseFormat)
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartObject()
            If value.Type IsNot Nothing Then
                writer.WritePropertyName("type")
                writer.WriteValue(value.Type)
            End If

            writer.WriteEndObject()
        End Sub ' WriteResponseFormat

        ''' <summary>
        ''' Writes array of <see cref="MessageItem"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteIReadOnlyListOfMessageItem(writer As Global.Newtonsoft.Json.JsonWriter, value As IReadOnlyList(Of MessageItem))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartArray()
            For Each item In value
                WriteMessageItem(writer, item)
            Next
            writer.WriteEndArray()
        End Sub

        ''' <summary>
        ''' Writes array of <see cref="FunctionTool"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteIReadOnlyListOfFunctionTool(writer As Global.Newtonsoft.Json.JsonWriter, value As IReadOnlyList(Of FunctionTool))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartArray()
            For Each item In value
                WriteFunctionTool(writer, item)
            Next
            writer.WriteEndArray()
        End Sub

        ''' <summary>
        ''' Writes array of <see cref="String"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteIReadOnlyListOfString(writer As Global.Newtonsoft.Json.JsonWriter, value As IReadOnlyList(Of String))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartArray()
            For Each item In value
                writer.WriteValue(item)
            Next
            writer.WriteEndArray()
        End Sub

        ''' <summary>
        ''' Writes array of <see cref="ContentType"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteIReadOnlyListOfContentType(writer As Global.Newtonsoft.Json.JsonWriter, value As IReadOnlyList(Of ContentType))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartArray()
            For Each item In value
                WriteContentType(writer, item)
            Next
            writer.WriteEndArray()
        End Sub

        ''' <summary>
        ''' Writes array of <see cref="JValue"/> to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteIReadOnlyListOfJValue(writer As Global.Newtonsoft.Json.JsonWriter, value As IReadOnlyList(Of JValue))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If

            writer.WriteStartArray()
            For Each item In value
                Global.Newtonsoft.Json.JsonSerializer.CreateDefault().Serialize(writer, item)
            Next
            writer.WriteEndArray()
        End Sub

        ''' <summary>
        ''' Writes composite type <see cref="StringOrArray(Of ContentType)"/> with type-based discriminator to JsonWriter.
        ''' </summary>
        Private Shared Sub WriteStringOrArrayOfContentType(writer As Global.Newtonsoft.Json.JsonWriter, value As StringOrArray(Of ContentType))
            If value Is Nothing Then
                writer.WriteNull()
                Return
            End If
            If value.ArrayValue IsNot Nothing Then
                WriteIReadOnlyListOfContentType(writer, value.ArrayValue)
            ElseIf value.StringValue IsNot Nothing Then
                writer.WriteValue(value.StringValue)
            Else
                writer.WriteNull()
            End If
        End Sub ' WriteStringOrArrayOfContentType

    End Class ' TextRequestWriter
End Namespace
